// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid()) @db.Uuid
  name     String
  email    String   @unique
  password String
  Movies   Movie[]
  Folders  Folder[]

  @@map("users")
}

model Movie {
  id         String            @id @default(uuid()) @db.Uuid
  externalId String
  category   String
  status     MOVIE_STATUS_TYPE
  rate       Float
  annotation String?
  userId     String            @map("user_id") @db.Uuid
  folderId   String            @map("folder_id")
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  User       User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  Folder     Folder            @relation(fields: [folderId], references: [id], onDelete: Cascade)

  @@map("movies")
}

model Folder {
  id      String  @id @default(uuid()) @db.Uuid
  name    String
  userId  String  @map("user_id") @db.Uuid
  movieId String  @map("movid_id") @db.Uuid
  User    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  Movies  Movie[]

  @@unique([name, userId])
  @@map("folders")
}

enum MOVIE_STATUS_TYPE {
  WATCHED
  WATCH_LATER
}
